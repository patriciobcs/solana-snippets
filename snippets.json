{"Get Account":{"description":"Get next account in the accounts iterator","prefix":["gacc"],"body":["let ${1:account}_info = next_account_info(account_info_iter)?;"]},"Init Associated Token Account":{"description":"Initialize an associated token account using the Token Program","prefix":["tka"],"body":["invoke(","    &initialize_account(","        &spl_token::ID,","        ${1:token}_info.key,","        ${2:mint}_info.key,","        ${3:authority}_info.key,","    )?,","    &[","        ${1:token}_info.clone(),","        ${2:mint}_info.clone(),","        ${3:authority}_info.clone(),","    ],",")?;"]},"Transfer Native SOL":{"description":"Transfer native SOL using System Program","prefix":["tsol"],"body":["invoke(","    &transfer(${1:sender}_info.key, ${2:receiver}_info.key, ${3:amount}),","    &[","        ${1:sender}_info.clone(),","        ${2:receiver}_info.clone(),","        ${4:system_program}_info.clone(),","    ],",")?;"]},"Transfer Tokens":{"description":"Transfer tokens using the Token Program","prefix":["tkt"],"body":["invoke(","    &transfer(","        &spl_token::ID,","        ${1:sender}_info.key,","        ${2:receiver}_info.key,","        ${3:authority}_info.key,","        &[],","        ${4:amount},","    )?,","    &[","        ${1:sender}_info.clone(),","        ${2:receiver}_info.clone(),","        ${3:authority}_info.clone(),","    ],",")?;"]},"Set PDA Bump":{"description":"Sets a PDA bump on an Account","prefix":["sbump"],"body":["${1:account}.bump = *ctx","    .bumps","    .get(\"${1:account}\")","    .expect(ProgramError::InvalidAccountData.into());"]},"Check Rent Exempt":{"description":"Check if an Account is Rent Exempt","prefix":["chrent"],"body":["if !rent.is_exempt(${1:account}_info.lamports(), ${2:Account}::LEN) {","    return Err(ProgramError::InvalidAccountData.into());","}"]},"Burn Tokens":{"description":"Burn tokens using the Token Program","prefix":["tkb"],"body":["invoke(","    &burn(","        &spl_token::ID,","        ${1:token}_info.key,","        ${2:mint}_info.key,","        ${3:authority}_info.key,","        &[],","        ${4:amount},","    )?,","    &[","        ${1:token}_info.clone(),","        ${2:mint}_info.clone(),","        ${3:authority}_info.clone(),","    ],",")?;"]},"Unpack Account":{"description":"Unpacks an Account Info","prefix":["unpack"],"body":["let mut ${1:account} = ${2:Account}::unpack(&${1:account}_info.data.borrow())?;"]},"Get Clock Sysvar":{"description":"Gets the Clock Sysvar","prefix":["gclock"],"body":["let ${1:clock} = Clock::get()?;"]},"Get Rent Sysvar":{"description":"Gets the Rent Sysvar","prefix":["grent"],"body":["let ${1:rent} = Rent::get()?;"]},"Delegate Tokens":{"description":"Delegate tokens using the Token Program","prefix":["tka"],"body":["invoke(","    &approve(","        &spl_token::ID,","        ${1:token}_info.key,","        ${2:delegate}_info.key,","        ${3:authority}_info.key,","        &[],","        ${4:amount},","    )?,","    &[","        ${1:token}_info.clone(),","        ${2:delegate}_info.clone(),","        ${3:authority}_info.clone(),","    ],",")?;"]},"Get Accounts Iterator":{"description":"Start iterator to get accounts of instruction","prefix":["gaccs"],"body":["let account_info_iter = &mut accounts.iter();","let ${1:account}_info = next_account_info(account_info_iter)?;"]},"Revoke Tokens Delegation":{"description":"Revoke the delegation of any tokens using the Token Program","prefix":["tkr"],"body":["invoke(","    &revoke(","        &spl_token::ID,","        ${1:token}_info.key,","        ${2:authority}_info.key,","        &[],","    )?,","    &[","        ${1:token}_info.clone(),","        ${3:delegate}_info.clone(),","        ${2:authority}_info.clone(),","    ],",")?;"]}}